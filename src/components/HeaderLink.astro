---
import type { HTMLAttributes } from 'astro/types';
import ExternalIcon from "./icons/external.astro";

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;
const isActive = href === pathname || href === pathname.replace(/\/$/, '');
---

<a href={href} class:list={["header-item", { active: isActive }]} {...props}>
	<slot />
	{props["target"] && <ExternalIcon />}
</a>

<style is:global>
	.header-item {
		text-decoration: none;
		color: #000;
		padding: 0.5rem 1rem;
		margin-inline-start: 0.5rem;
		border-radius: 0.45rem;
		display: flex;
		align-items: center;

		& svg {
			margin-inline-start: 0.5rem;
			width: 0.75rem;
			height: 0.75rem;
		}
	}

	.header-item:hover {
		background-color: rgba(0 0 0 / 0.1);
	}

	@media (prefers-reduced-motion: no-preference) {
		.header-item {
			transition: background-color 0.2s ease-in-out;

			& svg {
				transition: transform 0.2s ease-in-out;
			}
		}

		.header-item:hover svg {
			transform: translateX(0.125rem) translateY(-0.125rem);
		}
	}
</style>
